{
  "hash": "528671b00c32f0c039f7bcad1e2a4745",
  "result": {
    "markdown": "---\ntitle: Ruminations on Expected Lifetime Value\ndate: \"2023-08-13\"\ncode-fold: true\necho: true\nfig-cap-location: top\ncategories: []\nnumber-sections: false\ndraft: false\n---\n\n\n\n\nIn my opinion, there are a few core projects that data scientists should have a crack at at least once.  One of those projects is expected life time value modelling, or eLTV modelling.\n\neLTV means different things at different places and can depend on the business model.  At Zapier, eLTV means \"how much revenue do we expect an account to have produced some time in the future\".  At this point in the journey, eLTV is computed on a cohort basis (meaning we take all accounts joining on the same day and use the revenue generated from these accounts to estimate the eLTV for the cohort).\n\nI made a pretty good eLTV model using LASSO (yay, linear models) and I'm guessing you could do that too.  I'm pretty happy with where I landed, but I kept having the intrusive thought to model the data generating process a little more... Bayesianally.\n\nIn this blog post, I'm going to take a long and meandering look at eLTV from the Bayesian perspective.  We'll take a page from Jordan Nafa and leverage sufficiency to create eLTV forecasts for cohorts of accounts.  We'll start with a very simple decomposition of total cumulative revenue (the thing we start with when computing eLTV at Zapier) and turn that into a generative model.  From there, we'll do continuous model expansion, criticizing our model and relaxing assumptions where needed.\n\nThis is not a \"how to\" kind of post.  Its more of a \"how do\" post (or, how do I think of things).\n\n## An eLTV Model From First Principles\n\nThe total cumulative revenue from a cohort of accounts can be decomposed as\n\n$$ \\begin{align}\\mbox{Cumulative Revenue} = & \\mbox{Number of Accounts in Cohort} \\\\ & \\times \\mbox{Months Since Joining} \\\\ & \\times \\mbox{Average Revene Per Account Month} \\end{align}$$ {#eq-1}\n\n\nCumulative revenue can then increase in two ways: \n\n* You can get more accounts to join per unit time (increasing number of accounts in cohort), or \n* You can increase average revenue per account month (either by increasing prices, or getting more accounts to pay.  This itself can probably be further decomposed, but we will leave it here).\n\nLet's refer to cumulative revenue up to and including time $t$ from cohort $k$ as $y_{k, t}$.  Let $N_k$ be the size of the cohort (the number of unique accounts) and let the average revenue per account month be $\\lambda$.  Cumulative revenue is supported on the positive reals, so we can model cumulative revenue using a Gamma likelihood as \n\n$$ Y_{k, t} \\sim \\mbox{Gamma}\\left(N_k, \\dfrac{1}{t\\cdot \\lambda}\\right) \\>. $$\n\nUnder this parameterization, the expected cumulative revenue is\n\n$$ E[Y_{k, t}] = N_k \\cdot t \\cdot \\lambda \\>. $$ {#eq-2}\n\nNote how @eq-1 looks similar to @eq-2, and hence the interpretation is similar to our simple decomposition.  The model is almost too simple.  Here, we're assuming $\\lambda$ is not a function of $t$, which is probably false because accounts churn/activate (meaning fewer/more paying accounts over time).  But its a good place to start.  \n\n\n## Writing The Model in brms\n\nCoding this up in `{brms}` is fairly straight forward.  We do need to do a little algebra to be able to force the shape parameter to be constant and unmodelled in the `Gamma` family.  We can write this model as\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nlibrary(brms)\n\nmodel_1_form <- bf(\n  formula = y ~ 1 + offset(log(t)) + offset(log(N)),\n   shape = ~ offset(log(N)) - 1\n  )\n```\n:::\n\n\nNote we've included a log offset for `t` *and* a log offset for `N` in the main formula.  To see why, let's take a look at the stan code for this model using `make_stancode`.  I'll just show the relevant parts\n\n```\nmu = exp(eta_mu);\nshape = exp(eta_shape);\nfor (n in 1:N) {\n    target += gamma_lpdf(Y[n] | shape[n], shape[n] / mu[n])\n}\n```\nBrms parameterizes the gamma in terms of the mean, $\\mu$, and shape [^1], $\\phi$.  So in brms the model looks like\n\n$$ \\eta_\\mu = \\beta_0 + \\log(t) + \\log(N_k) $$\n$$ \\mu = \\exp(\\eta_\\mu) = N_k \\cdot t \\cdot \\exp(\\beta_0) = N_k \\cdot t \\cdot \\lambda $$\n\n$$\\eta_\\phi = \\log(N_k)$$\n\n$$ \\phi = \\exp(\\eta_\\phi) = N_k$$\n\nSo now when we pass these parameters to the likelihood as brms does, its going to look like\n\n$$\\begin{align} & \\mbox{Gamma}\\left( \\phi, \\dfrac{\\phi}{\\mu}\\right) \\\\ \n= & \\mbox{Gamma}\\left( N_k, \\dfrac{N_k}{ N_k \\cdot t \\cdot \\lambda }\\right) \\\\\n= & \\mbox{Gamma}\\left( N_k, \\dfrac{1}{ t \\cdot \\lambda }\\right)\\end{align}$$\n\nwhich is exactly what we wanted them to be.\n\n### Fit (on Fake Data)\n\nFor obvious reasons, I can't share real revenue data with you.  But, I've simulated some data from a model that I'm happy with.  In what follows, I'll be using that data to fit the model described above and demonstrate how I think about continuous model expansion.  Let's take a look at some of the data below.\n\n\nWhat you're seeing below is the cumulative revenue per cohort.  I've grouped accounts joining on the same day and monitor their cumulative revenue over the first 12 months of their tenure.  \n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nNote that even without fitting the data to the model, we can already tell something about the quality of our assumptions:\n\n* First, note that the variance changes as the mean changes.  The gamma has this property, good\n* Second, the average revenue is roughly linear in time, which was the purpose of using the offset $log(t)$ in our expression for $\\lambda$.\n* There are cohorts with smaller cumulative revenues, so a constant $\\lambda$ is probably a wrong assumption.\n\n\nLet's go ahead and fit the model to the data despite the fact we can clearly see the model is wrong.  The posterior predictions are shown below.\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\nRunning /Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB foo.c\nclang -arch arm64 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG   -I\"/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/Rcpp/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/RcppEigen/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/RcppEigen/include/unsupported\"  -I\"/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/BH/include\" -I\"/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/StanHeaders/include/src/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/StanHeaders/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/RcppParallel/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/rstan/include\" -DEIGEN_NO_DEBUG  -DBOOST_DISABLE_ASSERTS  -DBOOST_PENDING_INTEGER_LOG2_HPP  -DSTAN_THREADS  -DBOOST_NO_AUTO_PTR  -include '/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/StanHeaders/include/stan/math/prim/mat/fun/Eigen.hpp'  -D_REENTRANT -DRCPP_PARALLEL_USE_TBB=1   -I/opt/R/arm64/include   -fPIC  -falign-functions=64 -Wall -g -O2  -c foo.c -o foo.o\nIn file included from <built-in>:1:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/StanHeaders/include/stan/math/prim/mat/fun/Eigen.hpp:13:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/RcppEigen/include/Eigen/Dense:1:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/RcppEigen/include/Eigen/Core:88:\n/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/RcppEigen/include/Eigen/src/Core/util/Macros.h:628:1: error: unknown type name 'namespace'\nnamespace Eigen {\n^\n/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/RcppEigen/include/Eigen/src/Core/util/Macros.h:628:16: error: expected ';' after top level declarator\nnamespace Eigen {\n               ^\n               ;\nIn file included from <built-in>:1:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/StanHeaders/include/stan/math/prim/mat/fun/Eigen.hpp:13:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/RcppEigen/include/Eigen/Dense:1:\n/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/RcppEigen/include/Eigen/Core:96:10: fatal error: 'complex' file not found\n#include <complex>\n         ^~~~~~~~~\n3 errors generated.\nmake: *** [foo.o] Error 1\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nUnsurprisingly, the model can not account for those low value cohorts.  We'll need to account for them in the model somehow.  To identify those cohorts, let's first do something I don't think many people working with data do: think. Throwing things in the conditional mean works, but I want to take deliberate steps here, so let's ask ourselves how smaller cumulative revenue can come about.  @eq-1 is helpful here.  Smaller cumulative revenue can come about because we have: a) fewer accounts joining that day (small $N_k$), or b) the rate of spending per account is small.  Under what conditions might (a) be the reason for smaller value cohorts?  Maybe there are days which don't see many accounts joining. \n\nAnd indeed, that is true.  The weekend sees fewer accounts joining (mostly because fewer people are thinking about work on the weekends, and Zapier is a product to help automate your **work**, not your leisure).  Let's facet that last plot by business day.\n\nAha!  Nearly all the lower value accounts join on non-business days!  Note that the predicted cumulative revenue has changed as well; the smaller $N_k$ has affected the predictions.  But the difference is not big enough, so we'll have to model the effect of business day in particular. \n\nAnother thing I'd like to change is how the expected value changes in time.  Its no secret that accounts churn, and I also think its no secret that more accounts churn than spontaneously start paying.  So, I'm going to release the offset of $\\log(t)$ and model that effect directly.  Why $\\log(t)$ and not $t$? Because:\n\n* Remember we model $\\log(\\lambda)$, so if we included $\\beta t$ in the linear predictor, then the effect of age would be roughly exponential. We don't see an exponential increase or decrease in time.  \n* If we use $\\log(t)$ then the conditional mean looks like $N_{k, t} t^{\\beta} \\lambda$.  If $\\beta$ is close to 1, then we recover roughly linear behavior.  if $0 < \\beta<1$, we'll get some function which is concave down, meaning revenue accumulation starts to decelerate for some reason (like churn).\n\n\nThe full model is written in the next section.\n\n::: {.cell}\n\n```{.r .cell-code}\npost_plot + \n  facet_wrap(~is_business_day) + \n  labs(subtitle = 'Accounts on Non-Business Days are Lower Value')\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n## Next Model\n\nOur model is now\n\n$$ \\log(\\mu) = \\beta_0 + \\beta_1 \\log(t) + \\beta_2 \\mbox{BD} + \\log(N_k) $$\n$$\\log(\\phi) = \\log(N_k)$$\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbfit2 <- brm(\n  bf(\n    cumulative_revenue ~ 1 + log(age) *  is_business_day + offset(log(cohort_size)),\n    shape ~ offset(log(cohort_size)) - 1\n  ),\n  family=Gamma(link = log),\n  data=d,\n  cores=10,\n  chains=10\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRunning /Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB foo.c\nclang -arch arm64 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG   -I\"/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/Rcpp/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/RcppEigen/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/RcppEigen/include/unsupported\"  -I\"/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/BH/include\" -I\"/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/StanHeaders/include/src/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/StanHeaders/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/RcppParallel/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/rstan/include\" -DEIGEN_NO_DEBUG  -DBOOST_DISABLE_ASSERTS  -DBOOST_PENDING_INTEGER_LOG2_HPP  -DSTAN_THREADS  -DBOOST_NO_AUTO_PTR  -include '/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/StanHeaders/include/stan/math/prim/mat/fun/Eigen.hpp'  -D_REENTRANT -DRCPP_PARALLEL_USE_TBB=1   -I/opt/R/arm64/include   -fPIC  -falign-functions=64 -Wall -g -O2  -c foo.c -o foo.o\nIn file included from <built-in>:1:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/StanHeaders/include/stan/math/prim/mat/fun/Eigen.hpp:13:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/RcppEigen/include/Eigen/Dense:1:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/RcppEigen/include/Eigen/Core:88:\n/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/RcppEigen/include/Eigen/src/Core/util/Macros.h:628:1: error: unknown type name 'namespace'\nnamespace Eigen {\n^\n/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/RcppEigen/include/Eigen/src/Core/util/Macros.h:628:16: error: expected ';' after top level declarator\nnamespace Eigen {\n               ^\n               ;\nIn file included from <built-in>:1:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/StanHeaders/include/stan/math/prim/mat/fun/Eigen.hpp:13:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/RcppEigen/include/Eigen/Dense:1:\n/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/RcppEigen/include/Eigen/Core:96:10: fatal error: 'complex' file not found\n#include <complex>\n         ^~~~~~~~~\n3 errors generated.\nmake: *** [foo.o] Error 1\n```\n:::\n\n```{.r .cell-code}\npost_plot <- d %>% \n  add_predicted_draws(bfit2, ndraws = 2000) %>% \n  ggplot(aes(age, .prediction)) + \n  stat_interval() + \n  geom_jitter(data=d, aes(age + 15, cumulative_revenue), width = 5, height = 0, alpha = 0.5) + \n  theme_classic() + \n  theme(\n    axis.text.y = element_blank(),\n    panel.grid.major = element_line(),\n    panel.grid.minor = element_line(),\n    aspect.ratio = 1/1.61\n  ) +\n  labs(x = 'Time [Days]', \n       y = 'Cumulative Revenue [Dollars per Account]',\n       subtitle = 'Simulated Cumulative Revenue',\n       color='',\n       fill = 'Credible Int. Level')  + \n  facet_wrap(~is_business_day) \n\npost_plot\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n## Another Model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbfit3 <- brm(\n  bf(\n    cumulative_revenue ~ 1 + log(age) * is_business_day + offset(log(cohort_size)),\n    shape ~ offset(log(cohort_size))\n  ),\n  family=Gamma(link = log),\n  data=d,\n  cores=10,\n  chains=10\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRunning /Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB foo.c\nclang -arch arm64 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG   -I\"/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/Rcpp/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/RcppEigen/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/RcppEigen/include/unsupported\"  -I\"/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/BH/include\" -I\"/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/StanHeaders/include/src/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/StanHeaders/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/RcppParallel/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/rstan/include\" -DEIGEN_NO_DEBUG  -DBOOST_DISABLE_ASSERTS  -DBOOST_PENDING_INTEGER_LOG2_HPP  -DSTAN_THREADS  -DBOOST_NO_AUTO_PTR  -include '/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/StanHeaders/include/stan/math/prim/mat/fun/Eigen.hpp'  -D_REENTRANT -DRCPP_PARALLEL_USE_TBB=1   -I/opt/R/arm64/include   -fPIC  -falign-functions=64 -Wall -g -O2  -c foo.c -o foo.o\nIn file included from <built-in>:1:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/StanHeaders/include/stan/math/prim/mat/fun/Eigen.hpp:13:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/RcppEigen/include/Eigen/Dense:1:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/RcppEigen/include/Eigen/Core:88:\n/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/RcppEigen/include/Eigen/src/Core/util/Macros.h:628:1: error: unknown type name 'namespace'\nnamespace Eigen {\n^\n/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/RcppEigen/include/Eigen/src/Core/util/Macros.h:628:16: error: expected ';' after top level declarator\nnamespace Eigen {\n               ^\n               ;\nIn file included from <built-in>:1:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/StanHeaders/include/stan/math/prim/mat/fun/Eigen.hpp:13:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/RcppEigen/include/Eigen/Dense:1:\n/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/RcppEigen/include/Eigen/Core:96:10: fatal error: 'complex' file not found\n#include <complex>\n         ^~~~~~~~~\n3 errors generated.\nmake: *** [foo.o] Error 1\n```\n:::\n\n```{.r .cell-code}\npost_plot <- d %>% \n  add_predicted_draws(bfit3, ndraws = 2000) %>% \n  ggplot(aes(age, .prediction)) + \n  stat_interval() + \n  geom_jitter(data=d, aes(age + 15, cumulative_revenue), width = 5, height = 0, alpha = 0.5) + \n  theme_classic() + \n  theme(\n    axis.text.y = element_blank(),\n    panel.grid.major = element_line(),\n    panel.grid.minor = element_line(),\n    aspect.ratio = 1/1.61\n  ) +\n  labs(x = 'Time [Days]', \n       y = 'Cumulative Revenue [Dollars per Account]',\n       subtitle = 'Simulated Cumulative Revenue',\n       color='',\n       fill = 'Credible Int. Level')  + \n  facet_wrap(~is_business_day)\n\npost_plot\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n## Last Model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbfit4 <- brm(\n  bf(\n    cumulative_revenue ~ 1 + s(age, k=6, by=wday) + wday + offset(log(cohort_size)),\n    shape ~ offset(log(cohort_size)) -1 \n  ),\n  family=Gamma(link = log),\n  data=d,\n  cores=10,\n  chains=10\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRunning /Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB foo.c\nclang -arch arm64 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG   -I\"/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/Rcpp/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/RcppEigen/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/RcppEigen/include/unsupported\"  -I\"/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/BH/include\" -I\"/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/StanHeaders/include/src/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/StanHeaders/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/RcppParallel/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/rstan/include\" -DEIGEN_NO_DEBUG  -DBOOST_DISABLE_ASSERTS  -DBOOST_PENDING_INTEGER_LOG2_HPP  -DSTAN_THREADS  -DBOOST_NO_AUTO_PTR  -include '/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/StanHeaders/include/stan/math/prim/mat/fun/Eigen.hpp'  -D_REENTRANT -DRCPP_PARALLEL_USE_TBB=1   -I/opt/R/arm64/include   -fPIC  -falign-functions=64 -Wall -g -O2  -c foo.c -o foo.o\nIn file included from <built-in>:1:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/StanHeaders/include/stan/math/prim/mat/fun/Eigen.hpp:13:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/RcppEigen/include/Eigen/Dense:1:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/RcppEigen/include/Eigen/Core:88:\n/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/RcppEigen/include/Eigen/src/Core/util/Macros.h:628:1: error: unknown type name 'namespace'\nnamespace Eigen {\n^\n/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/RcppEigen/include/Eigen/src/Core/util/Macros.h:628:16: error: expected ';' after top level declarator\nnamespace Eigen {\n               ^\n               ;\nIn file included from <built-in>:1:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/StanHeaders/include/stan/math/prim/mat/fun/Eigen.hpp:13:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/RcppEigen/include/Eigen/Dense:1:\n/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/RcppEigen/include/Eigen/Core:96:10: fatal error: 'complex' file not found\n#include <complex>\n         ^~~~~~~~~\n3 errors generated.\nmake: *** [foo.o] Error 1\n```\n:::\n\n```{.r .cell-code}\npost_plot <- d %>% \n  add_predicted_draws(bfit4, ndraws = 2000) %>% \n  ggplot(aes(age, .prediction)) + \n  stat_interval() + \n  geom_jitter(data=d, aes(age + 15, cumulative_revenue), width = 5, height = 0, alpha = 0.5) + \n  theme_classic() + \n  theme(\n    axis.text.y = element_blank(),\n    panel.grid.major = element_line(),\n    panel.grid.minor = element_line(),\n    aspect.ratio = 1/1.61\n  ) +\n  labs(x = 'Time [Days]', \n       y = 'Cumulative Revenue [Dollars per Account]',\n       subtitle = 'Simulated Cumulative Revenue',\n       color='',\n       fill = 'Credible Int. Level')  + \n  facet_wrap(~is_business_day, scales = 'free_y', nrow = 1)\n\npost_plot\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n[^1]: Actually, if you look at the output from `make_stancode` then you won't find reference to variables `eta_mu` or `eta_shape`. Brms does something like `mu = exp(mu)`, but I thought that would be confusing.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}